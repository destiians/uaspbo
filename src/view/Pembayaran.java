/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.Controller;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import model.Mahasiswa;

/**
 *
 * @author user
 */
public class Pembayaran extends javax.swing.JPanel {

    private JScrollPane contentScrollPane;
    private Controller controller;
    /**
     * Creates new form Pembayaran
     */
    public Pembayaran() {
        initComponents();
    }
    
    public Pembayaran(JScrollPane contentScrollPane) {
        this.contentScrollPane = contentScrollPane;
        initComponents();
        controller = new Controller();
    }
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        namaTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        mahasiswaTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        kasTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jumlahSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        tanggalDateChooser = new com.toedter.calendar.JDateChooser();
        simpanButton = new javax.swing.JButton();
        kembaliButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("NIM");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));
        add(nimTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 151, -1));

        searchButton.setText("Cari");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, -1));

        jLabel2.setText("Nama");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));
        add(namaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 151, -1));

        mahasiswaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"September", null},
                {"Oktober", null},
                {"November", null},
                {"Desember", null},
                {"Februari", null},
                {"Maret", null},
                {"April", null},
                {"Mei", null},
                {"Juni", null},
                {"Juli", null}
            },
            new String [] {
                "Bulan", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mahasiswaTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 223, 229));

        jLabel3.setText("Kas");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, -1, -1));
        add(kasTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 180, -1));

        jLabel4.setText("Jumlah");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));
        add(jumlahSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, -1));

        jLabel5.setText("Tanggal");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, -1));
        add(tanggalDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 180, -1));

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });
        add(simpanButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, -1, -1));

        kembaliButton.setText("Kembali");
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });
        add(kembaliButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String nim = nimTextField.getText();
    
    if (!nim.isEmpty()) {
        // Panggil metode di Controller untuk mencari mahasiswa berdasarkan NIM
        Mahasiswa mhs = controller.cariByNim(nim);        
            if (mhs != null) {
                // Tampilkan nama mahasiswa
                namaTextField.setText(mhs.getNama());

                // Update tabel Mahasiswa dengan data bulan-bulan dan status pembayarannya
                DefaultTableModel model = (DefaultTableModel) mahasiswaTable.getModel();
                model.setRowCount(0); // Kosongkan tabel sebelum menampilkan data baru

                // Tambahkan baris-baris untuk setiap bulan
                model.addRow(new Object[]{"September", mhs.getKasSep() != null ? mhs.getKasSep() : "Belum bayar"});
                model.addRow(new Object[]{"Oktober", mhs.getKasOkt() != null ? mhs.getKasOkt() : "Belum bayar"});
                model.addRow(new Object[]{"November", mhs.getKasNov() != null ? mhs.getKasNov() : "Belum bayar"});
                model.addRow(new Object[]{"Desember", mhs.getKasDes() != null ? mhs.getKasDes() : "Belum bayar"});
                model.addRow(new Object[]{"Februari", mhs.getKasFeb() != null ? mhs.getKasFeb() : "Belum bayar"});
                model.addRow(new Object[]{"Maret", mhs.getKasMar() != null ? mhs.getKasMar() : "Belum bayar"});
                model.addRow(new Object[]{"April", mhs.getKasApr() != null ? mhs.getKasApr() : "Belum bayar"});
                model.addRow(new Object[]{"Mei", mhs.getKasMei() != null ? mhs.getKasMei() : "Belum bayar"});
                model.addRow(new Object[]{"Juni", mhs.getKasJun() != null ? mhs.getKasJun() : "Belum bayar"});
                model.addRow(new Object[]{"Juli", mhs.getKasJul() != null ? mhs.getKasJul() : "Belum bayar"});
            } else {
                // NIM tidak ditemukan, atur nama kosong dan tabel kosong
                namaTextField.setText("");
                DefaultTableModel model = (DefaultTableModel) mahasiswaTable.getModel();
                model.setRowCount(0);
            }
        }        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        // TODO add your handling code here:
        contentScrollPane.setViewportView(new BendaharaView(contentScrollPane));
    }//GEN-LAST:event_kembaliButtonActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        double jumlah = (int) jumlahSpinner.getValue()*Double.parseDouble(kasTextField.getText());
        String keterangan = "kas";
        java.util.Date utilDate = tanggalDateChooser.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = sdf.format(utilDate);
        
        String idUser = nimTextField.getText();
        boolean berhasilDisimpan = controller.simpanTransaksi(idUser, "Pemasukan", tanggal, jumlah, keterangan);

        if (berhasilDisimpan) {
            JOptionPane.showMessageDialog(this, "Transaksi berhasil disimpan!");
            controller.updateDataMahasiswa(idUser, tanggal, (int) jumlahSpinner.getValue());
            contentScrollPane.setViewportView(new BendaharaView(contentScrollPane));
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi.");
        }
    }//GEN-LAST:event_simpanButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jumlahSpinner;
    private javax.swing.JTextField kasTextField;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JTable mahasiswaTable;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton simpanButton;
    private com.toedter.calendar.JDateChooser tanggalDateChooser;
    // End of variables declaration//GEN-END:variables
}
